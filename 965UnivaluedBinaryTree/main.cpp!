struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

class Solution {
public:
  bool isUnivalTree(TreeNode* root) {
    return isUnivalTreeSearch(root, root->val);
  }

  bool isUnivalTreeSearch(TreeNode* node, int rootVal) {
    if (node == nullptr)
      return true;
    if (node->val != rootVal)
      return false;
    return isUnivalTreeSearch(node->left, rootVal) && isUnivalTreeSearch(node->right, rootVal);
  }
};

